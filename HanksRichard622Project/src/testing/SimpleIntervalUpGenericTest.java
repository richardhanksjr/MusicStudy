package testing;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.Test;

import edu.cs622.MajorScale;
import edu.cs622.SimpleIntervalUpGeneric;

public class SimpleIntervalUpGenericTest {
	SimpleIntervalUpGeneric intUpCMajor;

	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Before
	public void setUp() throws Exception {
		intUpCMajor = new SimpleIntervalUpGeneric(new MajorScale(0));
		// call the overloaded generateQuestionAndAnswer method to control the params for the test.
		// In regular use, the no args version is called and random values are passed.
		intUpCMajor.generateQuestionAndAnswer("C", "perfect fifth above", "mediant");
	}

	// Test that the question String is properly formatted after being called in the constructor
	@Test
	public void testQuestionFormatAfterConstructorSetup(){
		String expectedOutput = "In the key of C Major, what is the note a perfect fifth above the mediant?";
		assertEquals(expectedOutput, intUpCMajor.getQuestion());

	}
	
	// Test that the answer generated by the instantiation of the SimpleIntervalUpMajorScale is correct
	@Test
	public void testForCorrectAnswer(){
		String expectedAnswer = "B";
		assertEquals(expectedAnswer, intUpCMajor.getAnswer());
	}
	
	// Test that the answer check works
	@Test
	public void testCheckForCorrectAnswer(){
		String correctAnswer = "B";
		assertEquals(true, intUpCMajor.checkAnswer(correctAnswer));
	}
	
	// Test that the answer check works when the answer is false
	@Test
	public void testCheckForIncorrectAnswer(){
		String incorrectAnswer = "Bb";
		assertEquals(false, intUpCMajor.checkAnswer(incorrectAnswer));
	}
	
	// Test that the feedback explanation to the user on the question is correct
	@Test
	public void testCorrectUserAnswerExplanation(){
		String expectedExplanation = "The mediant of C Major is E.  The note a perfect fifth above E is B.  The answer is B.";
		String actualExplanation = intUpCMajor.getExplanation();
		assertEquals(expectedExplanation, actualExplanation);
	}

	// Test that the proper key name is returned
	@Test
	public void testReturnsCorrectKey(){
		String expectedKey = "Compound Scalar Intervals Up";
		String actualKey = intUpCMajor.getKey();
		assertEquals(expectedKey, actualKey);
		
	}

}
